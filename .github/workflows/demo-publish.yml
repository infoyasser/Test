 name: Gradle Package and Deploy
 
on:
  release:
    types: [created]
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose an action to perform'
        required: true
        default: 'buildAndDeploy'
        type: choice
        options:
          - 'buildAndDeploy'
          - 'build'
          - 'deploy'
          - 'delete-from-Cloud'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Log selected action
        run: echo "Selected action: ${{ github.event.inputs.action }}"

      - name: Build with Gradle
        if: ${{ github.event.inputs.action == 'build' || github.event.inputs.action == 'buildAndDeploy' }}
        run: ./gradlew clean build

      - name: Configure AWS credentials
        if: ${{ github.event.inputs.action == 'deploy' || github.event.inputs.action == 'buildAndDeploy' }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Deploy to AWS Lambda
        if: ${{ github.event.inputs.action == 'deploy' || github.event.inputs.action == 'buildAndDeploy' }}
        run: bash ${GITHUB_WORKSPACE}/scripts/createOrUpdate.sh

      - name: Run custom script
        if: ${{ github.event.inputs.action == 'delete-from-Cloud' }}
        run: bash ${GITHUB_WORKSPACE}/scripts/delete_lambda.sh


   #   - name: Publish to GitHub Packages  # Optional step, remove if not needed
   #     run: ./gradlew publish
   #     env:
   #       USERNAME: ${{ github.actor }}
   #       TOKEN: ${{ secrets.GITHUB_TOKEN }}
