plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.sample.demo'
version = '1.0-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:2.0.1'
	testImplementation 'com.amazonaws.serverless:aws-serverless-java-container-core'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


dependencyManagement {
	imports {
		mavenBom "org.junit:junit-bom:5.10.2"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

configurations {
	shaded
}

task shadedJar(type: Jar) {
	archiveClassifier.set('all')
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from sourceSets.main.output

	configurations.shaded.each { File file ->
		if (!file.name.contains('tomcat-embed')) {
			from(zipTree(file))
		}
	}
}

tasks.named('jar') {
	enabled = false
}

tasks.assemble {
	dependsOn shadedJar
	doLast {
		// Optional: Perform additional actions after shadedJar is built (e.g., copy the zip file)
	}
}

task copyDependencies(type: Copy) {
	into "${buildDir}/lib"
	from configurations.runtimeClasspath
}

task zipAssembly(type: Zip) {
	archiveFileName = "${project.name}-${project.version}.zip"

	dependsOn compileJava
	dependsOn processResources

	// Include the compiled classes and resources from the main source set
	from('build/classes/java/main') {
		into ''
	}
	from('build/resources/main') {
		into ''
	}

	// Include the dependencies in the lib folder
	into('lib') {
		from copyDependencies
	}
}



assemble {
	dependsOn zipAssembly
}